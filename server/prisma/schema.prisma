generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  f_name    String ? @db.VarChar(50)
  l_name    String ? @db.VarChar(50)
  email     String   @unique @db.VarChar(255)
  image     String ?
  password  String
  carts     Cart[]
  orders    Order[]
  reviews   Review[]
  OnHolds   OnHold[]
  Favorites Favorite[]
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  image       String
  description String
  price       Decimal  @db.Decimal(10, 2)
  category    String
  quantity    Int
  carts       Cart[]
  orders      Order[]
  reviews     Review[]
  Favorites Favorite[]
}

model Cart {
  id      Int  @id @default(autoincrement())
  user    User @relation(fields: [id_user], references: [id])
  id_user Int
  book    Book @relation(fields: [id_book], references: [id])
  id_book Int
  quantity Int
}

model Order {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [id_user], references: [id])
  id_user      Int
  book         Book     @relation(fields: [id_book], references: [id])
  id_book      Int
  total_price  Decimal  @db.Decimal(5, 2)
  address      String
  phone_number String
  order_status OrderStatus
}

model Review {
  id      Int  @id @default(autoincrement())
  user    User @relation(fields: [id_user], references: [id])
  id_user Int
  book    Book @relation(fields: [id_book], references: [id])
  id_book Int
  rating  Int  @default(1)
  body    String
}

model OnHold {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [id_user], references: [id])
  id_user     Int
  title       String
  author      String
  image       String
  description String
  price       Decimal  @db.Decimal(5, 2)
  status      HoldStatus
  created_at  DateTime @default(now())
}

model Favorite {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [id_user], references: [id])
  id_user Int
  book    Book  @relation(fields: [id_book], references: [id])
  id_book Int
}

enum OrderStatus {
  pending
  delivering
  cancelled
  completed
}

enum HoldStatus {
  pending
  cancelled
  accepted
}
